BUGS:
1	Messages should use message-id for identification.
2	Seperate lists can receive the same message.
		-> If we implement insertion earlier in the id list, we
		   screw ourselves for index caching.
3	Need a link back to the index from messages for each list.
4	Attachments should be cacheable - fix it somehow.
5	Make threading work somehow.

	#1 *** Message ID instead of docid should be URL
		a: find a good md5 implementation.
		b: decide what fields to use to generate id if missing
		c: build a message-id generating function.
		d: add message-id to the variable data (first thing)
		e: remove message-id from keyword DB, fork into a direct db3
		   database: message-id -> docid.
		f: Change all message links to print message-id instead of
		   docid.

	#2 *** Same message in multiple lists:
		a: finish #2 since this depends on it
		b: Add another database which stores what lists a message
		   appears in. It should contain:
			list, list offset, mbox, mbox offset -- repeated
		c: Summary should now only include timestamp, flat offset,
		   thread... (what is thread?) --- some kind of indirection
		   marker.
		d: At import, check to see if we already have a given
		   message-id.
		e: See if already in the lists of occurance database.
		f: Append to the lists of occurance database.
		g: If docid > last in list, push it.
		h: Else, push an indirect docid.
	
	#3 *** Link back to each list:
		a: Finish #4
		b: Simply use the new list offset field in the database.
	
	#4 *** Cachable attachments:
		Hrm. Not sure what to do here; maybe modify .htaccess to
		tell apache the content-type?
	
	#5 *** Threading:
		??? Not sure what to do; old scheme is not good enough.
		Maybe we want some sort of breath-first search?
