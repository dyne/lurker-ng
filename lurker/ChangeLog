v0.1d:
	Fixed an off by one error in btree.c (could assert-fail)
	Kap allowed wbuffers w/o append, which could consume a lot of RAM
		during the backup script
	Fixed a free(0) in mbox.c
	Quatered the cache given to a write buffer
	Quadrupled the cache dump frequency
	Added command-line option for disabling import
	Added command-line option for disabling service
	Made the AVL trees reentrant
	Reintegrated the read buffer into libkap -> faster searches
	mmap is used for .append files to allow async writes
	We preallocate storage for append to prevent wasted writes
	Threads can span 3 months instead of 1

v0.1c:
	Added libkap which completely replaces all of libdb3 and flatfile
		-- this means the database needs to be reimported
		-- we can now import >6Gb email with reasonable speed
	Included a backup to text-file command
		-- allows migration for future database versions
		-- deals with cases of power-failure killing db
	Improved the regexps for email markup
	Added date-range keyword searching
	configure no longer tries to rebuild Makefile.in / aclocal.m4 / etc
	Japanese added
	Thorough unit tests for the database
	Much better conformance to strict ansi C
	Beautified XSLT ala Max
	Many smaller things that got lost in the frenzied switch to libkap

v0.1b:
	Improved installation documentation
	Configure allows dependencies to be in non root locations
	Fixed a configure problem on MacOS X
	Switched everything to ISO C99
	Added the write caching algorithm (about a 15x import speedup)
	Added a new database format for flatfile (about 2x speedup)
	Breaders can now reclaim boundary info memory
	Attempt to save the database on a segfault
	Profiling code added
	Minor bugfixes
	
v0.1a:
	Initial alpha release to test core lurker functionality.
