4 billion message barrier (12TB mail)

	Lurker uses 32-bit message-ids

breaking the 4 billion message barrier: (12TB mail)

	If you really need more than this, you can edit the line
		typedef lu_quad message_id;
	to read
		typedef lu_addr message_id;
	
	This will probably work, however, as I have never had this many
	messages, I have been unable to test this myself.

2 billion message barrier (6TB mail)

	Same as the 4 billion message barrier, however, this barrier may or
	may not exist due to my inability to test for correct usage of
	unsigned values everywhere. (Remember: we are talking about 6TB!)

breaking the 2 billion message barrier (6TB mail)

	See breaking the 4 billion barrier, if you break it, you break this.

1 million message barrier (3 GB mail)

	Lurker uses mmaps entensively (some might say insanely). 
	The entire keyword search database is mmap'd at once. 
	This restricts the database to a size of about 1GB since there
	is overhead on re-mmap'ing. 
	The database at this volume is about 33% the size of the email. 
	So you can address 3Gb of email.

breaking the 1 million message barrier (3GB mail)

	There are two ways to break the 1 million message barrier.
	
	Technique #1 (recommended):
		Get a 64-bit processor. This will allow you to mmap more
		than 2GB which will solve the problem. 
		This will not require any changes to the code, or 
		any performance degredation.
		
		Since lurker will be released along side the advent of
		consumer 64bit machines, I think this is the best option.

	Technique #2 (hated):
		configure with --disable-mmap
		This is insane! 
		Doing this will reduce your import performance by about 10*
